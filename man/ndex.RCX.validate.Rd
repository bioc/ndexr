% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ndex_RCX.r
\name{ndex.RCX.validate}
\alias{ndex.RCX.validate}
\title{Updating the meta-data of an RCX object}
\usage{
ndex.RCX.validate(rcx, mandatoryAspects = c("nodes"),
  countElementsOfAspects = NULL, keyValueAspects = c("@context"),
  verbose = FALSE)
}
\arguments{
\item{rcx}{RCX object}

\item{mandatoryAspects}{character vector; Aspects, that are mandatory for a valid RCX object (by default: "nodes")}

\item{countElementsOfAspects}{character vector; Aspects, that should be counted (i.e. have an entry in elementCount != NA)}

\item{keyValueAspects}{character vector; Specifies the aspects, that consist of key-value pairs}

\item{verbose}{logical; whether to print out extended feedback}
}
\value{
\code{\link{RCX}} object
}
\description{
Updating the meta-data of an RCX object
}
\details{
For a given RCX object the meta-data is updated, i.e. the counted elements and id counter are updated. If an aspect was removed, it will also removed from the meta-data. But, in contrast, if an aspect is added (manually, and not by ndex.RCXaddAspect), no meta-data is added.
If mandatory aspects (specified in mandatoryAspects parameter; by default "mandatoryAspects=c('nodes')", which is the minimal requirement for a valid RCX object) are missing in the RCX object, an error is thrown.
By default, the aspects, which already have an entry for "elementCount" (i.e. != NA), are updated. If any aspect name is given by the "countElementsOfAspects" parameter, those aspects are used for counting (the default behavour usually corresponds with setting "countElementsOfAspects=c('citations','@context','edges','ndexStatus','nodes')")
For counting the elements, there are two different strategies: The default strategy is counting the lines of the data.frame (which translate in JSON to the elements of an array).
In some cases (e.g. for the aspect "@context"), the data consists of simple key-value pairs. In the RCX object the keys are the (named) columns, and the values embeded in the single line of the data.frame (which translates in JSON to an array, with an object as single entry).
The correct way of counting the elements of those aspects is therefore by column, which can spezified by the "keyValueAspects" parameter, e.g. by default the parameter is set "keyValueAspects=c('@context')" to allow the key-value pairs in the "@context" aspect to be counted correctly.
(Note: Since keys are supposed to be unique, this might be the savest way realizing this within both, JSON and R)
}
\examples{
\dontrun{
rcx = ndex.RCXupdateMetaData(rcx)
# or with explicitly set default values
rcx = ndex.RCXupdateMetaData(rcx, mandatoryAspects=c('nodes'), countElementsOfAspects=NULL, keyValueAspects=c('@context'), verbose=FALSE)
# which, in the most cases, equals to
rcx = ndex.RCXupdateMetaData(rcx, mandatoryAspects=c('nodes'), countElementsOfAspects=c('citations','@context','edges','ndexStatus','nodes'), keyValueAspects=c('@context'), verbose=FALSE)}
}

