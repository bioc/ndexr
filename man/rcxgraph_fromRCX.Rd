% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ndex_RCXgraph.r
\name{rcxgraph_fromRCX}
\alias{rcxgraph_fromRCX}
\alias{RCXgraph}
\title{Create RCXgraph object from RCX object}
\usage{
rcxgraph_fromRCX(rcx, verbose = FALSE)
}
\arguments{
\item{rcx}{RCX object}

\item{verbose}{logical; whether to print out extended feedback}
}
\value{
returns object of class RCXgraph if successfull, NULL otherwise
}
\description{
This function creates an RCXgraph object from a supplied \code{\link{RCX}} object.
RCX objects store the CX data as a named list of data.frames containing metaData and all aspects of the network.
The RCXgraph class inherits from igraph and contains the complete (R)CX information as graph, node and edge attributes.
All \code{\link[igraph]{igraph}} functionality is available, e.g. access nodes and edges of igraph g via V(g) and E(g) and their attributes via V(g)$attribute
}
\details{
The following rules apply to convert from \code{\link{RCX}} to RCXgraph:
\itemize{
 \item nodes receive the "@id" value as name. All other information in aspects node and nodeAttributes are saved as node attributes, access via V(g).
       Data goes from long format (column n containing attribute name and column v containing attribute value) to wide format (columns for each unique n with cells contianing v).
 \item edges are connected via their "s"art and "t"arget fields. The "@id" and "i"nteraction attribute are stored as is and all edgeAttributes are saved as node attributes, access via E(g).
       Data goes from long format (column n containing attribute name and column v containing attribute value) to wide format (columns for each unique n with cells contianing v).
 \item all other aspect data is stored as graph attributes, access via g$aspect
}

An RCXgraph object could look like this:\cr
\preformatted{
> str(rcxgraph)
 IGRAPH DN-B 244 141 --
  + attr: metaData (g/x), numberVerification (g/x), ndexStatus (g/x), networkAttributes (g/x), hiddenAttributes (g/x), cartesianLayout (g/x),
  | visualProperties (g/x), subNetworks (g/x), cyViews (g/x), networkRelations (g/x), cyTableColumn (g/x), status (g/x), name (v/c), n (v/c), NAME (v/c),
  | type (v/c), selected (v/c), name (e/c), i (e/c), shared name (e/c), Score (e/c), NAME (e/c), interaction (e/c), Direction (e/c), Annotation (e/c),
  | selected (e/c)
 + edges (vertex names):
   [1] 314->315 312->313 311->313 310->311 309->313 309->311 308->309 306->307 304->305 302->303 299->301 299->300 297->298 295->296 293->292 291->292 289->290 287->288
  [19] 285->286 283->284 281->282 279->280 277->278 275->276 273->274 271->272 269->270 267->268 265->266 263->264 261->262 259->260 257->258 255->256 253->254 251->252
  [37] 249->250 247->248 245->246 242->243 240->241 238->239 236->237 234->235 232->233 230->231 228->229 226->227 224->225 224->221 223->221 222->221 220->221 218->217
  [55] 216->217 214->294 214->244 214->215 212->213 210->211 208->209 206->207 204->205 202->203 200->201 199->198 198->241 198->235 197->198 195->196 194->196 193->194
  [73] 192->194 192->193 191->194 191->193 190->194 190->191 188->189 186->187 184->185 182->183 180->181 179->178 177->219 177->178 175->176 173->174 171->172 169->170
  [91] 167->168 165->166 163->164 161->162 160->159 158->159 156->157 155->217 154->155 152->153 150->151 148->149 146->147 144->145 143->198 142->143 140->141 138->139
 [109] 136->137 134->135 132->133 130->131 128->129 126->127 124->125 122->123 120->121 118->119 116->117 114->115 112->113 110->111 108->109 106->107 104->105 102->103
 [127] 100->101 98 ->99  96 ->97  94 ->95  92 ->93  90 ->91  88 ->89  86 ->87  84 ->85  82 ->83  80 ->81  78 ->79  76 ->77  74 ->75  72 ->73

> V(rcxgraph)[[]]   ## @id as vertex names
 + 244/244 vertices, named:
     name                         n                      NAME type selected
 1    315                     ZNF84                     ZNF84 gene    false
 2    314 chr12:133450233-133450289 chr12:133450233-133450289   nc    false
 3    313                    ZNF572                    ZNF572 gene    false
 4    312  chr8:125985493-125985548  chr8:125985493-125985548   nc    false
 5    311                    ZNF561                    ZNF561 gene    false
 ....

> V(rcxgraph)$NAME   ## (node) names of the vertices from rcx$nodeAttributes
  [1] "ZNF84"                     "chr12:133450233-133450289" "ZNF572"                    "chr8:125985493-125985548"  "ZNF561"
  ...

> E(rcxgraph)[[]]
 + 11/11 edges (vertex names):
 + 141/141 edges (vertex names):
     tail head tid hid name              i                                         shared.name Score                                                NAME    interaction
 1    315  314   1   2  456 interacts with    chr12:133450233-133450289 (interacts with) ZNF84     1    chr12:133450233-133450289 (interacts with) ZNF84 interacts with
 2    313  312   3   4  455 interacts with    chr8:125985493-125985548 (interacts with) ZNF572     1    chr8:125985493-125985548 (interacts with) ZNF572 interacts with
 3    313  311   3   5  454 interacts with                      ZNF561 (interacts with) ZNF572  <NA>                      ZNF561 (interacts with) ZNF572 interacts with
 4    311  310   5   6  453 interacts with       chr19:9707546-9707590 (interacts with) ZNF561     1       chr19:9707546-9707590 (interacts with) ZNF561 interacts with
 5    313  309   3   7  452 interacts with                      ZNF257 (interacts with) ZNF572  <NA>                      ZNF257 (interacts with) ZNF572 interacts with

> E(rcxgraph)$i
 [1] "neighbor-of"                 "neighbor-of"                 "neighbor-of"
 [4] "controls-expression-of"      "controls-phosphorylation-of" "controls-state-change-of"
 [7] "controls-phosphorylation-of" "controls-state-change-of"    "controls-phosphorylation-of"
 [10] "controls-state-change-of"    "neighbor-of"
}
}
\examples{
## Create an RCX object
rcx = rcx_new(c('@id'=1, n='Some Name', r='HGNC:Symbol'))
## Convert to RCXgraph
rcxgraph = rcxgraph_fromRCX(rcx)
}
\seealso{
\code{\link{rcxgraph_toRCX}} \code{\link{rcx_fromJSON}} \code{\link{rcx_toJSON}} \code{\link{RCX}} \code{\link[igraph]{igraph}}
}
