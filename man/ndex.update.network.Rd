% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ndex_networks_simple_operations.r
\name{ndex.update.network}
\alias{ndex.update.network}
\title{Update an Entire Network as CX}
\usage{
ndex.update.network(ndexcon, rcx, nuuid)
}
\arguments{
\item{ndexcon}{object of class NDEXConnection}

\item{rcx}{\code{\link{RCX}} object}

\item{nuuid}{(optional); unique ID of the network}
}
\value{
UUID of the updated network
}
\description{
This method updates/replaces a existing network on the NDEx server with new content.
The UUID can either be specified manually or it will be extracted from the RCX object (i.e. from rcx$ndexStatus$externalId).
}
\details{
This method updates a network on the NDEx server with new content from the given RCX object
}
\note{
Compatible to NDEx server version 1.3 and 2.0
}
\section{REST query}{

PUT (multipart/form-data): ndex.api.config$api$network$update$url
data: CXNetworkStream = data
}
\examples{
\dontrun{
ndexcon = ndex.connect('MyAccountName', 'MyPassword', verbose=T)
pws = ndex.find.networks(ndexcon,"p53")
rcx = ndex.get.network(ndexcon,pws[1,"externalId"]) 
## do some changes to rcx
nuuid = ndex.update.network(ndexcon, rcx, nuuid)
nuuid = ndex.update.network(ndexcon, rcx) ## same as previous}
}

